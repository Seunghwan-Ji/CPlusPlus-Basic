

int main()
{
	// 자료형 (크기 단위, byte) Data Type
	// 정수형: char(1), short(2), int(4), long(4), long long(8)
	// 실수형: float(4), double(8)

	// 정수는 정수끼리, 실수는 실수끼리 연산하되,
	// 두 표현방식의 피 연산자가 연산될 경우 명시적으로 변환하자.
	float f = 10.2415f + (float)20;

	// 실수를 상수로 적을 경우 소수점 위에 f를 붙이면 float 자료형으로,
	// f를 붙이지 않으면 double 자료형으로 간주한다.
	// 0.1f; 0.1;

	// 연산자
	// 대입 연산자: =
	
	// 산술 연산자
	// +, -, *, /, %(모듈러스, 나머지, 피연산자가 모두 정수)
	// ++, --
	int data = 10 + 10;
	
	// data = data + 20;
	data += 20; // 두 문장은 서로 같은 명령이다.
	
	data = 10 / 3; // 정수끼리의 나눗셈이며, 변수 data의 데이터 타입은 정수형이므로, 연산결과는 3.333...에서 소수 부분을 제외한 3이 변수에 저장된다.
	data = 10 % 3; // 모듈러스 연산자를 사용하면 나머지 값이 변수에 저장된다.
	// data = 10. % 3.; 실수끼리의 나눗셈은 실수가 나오기 때문에 나머지 개념을 적용하기 어렵다.
	// 그러므로 문법 오류가 발생한다.

	data = 10. / 3.; // 연산 결과는 3.333...으로 실수지만, data 변수는 정수 타입이기 때문에 정수 타입으로 변환되어 저장된다.
	// 다만 뒤에 소수 부분은 버려지기 때문에 데이터 손실 경고가 나타난다.
	data = (int)(10. / 3.); // 이런식으로 명시적으로 표현해주면 경고가 발생하지 않는다.
	data = (int)(10.f / 3.f); // 두 실수를 4바이트 float 타입으로 본다.

	return 0;
}
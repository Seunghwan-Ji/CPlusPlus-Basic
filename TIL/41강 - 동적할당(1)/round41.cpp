#include <stdio.h>
#include <wchar.h> // 와이드 문자 스트링 길이 계산
#include <assert.h> // 예외처리 용도
#include <iostream> // Input Output Stream: C++의 표준 입출력 클래스가 정의되어 있는 헤더파일
// stdio.h 헤더파일과 iostream 파일의 차이점
// C가 stdio.h 헤더파일에 표준 입출력을 위한 '함수'를 정의하고 있는 것과는 달리
// C++ iostream 헤더파일에 표준 입출력을 위한 '클래스'를 정의하고 있다는 차이점이 있다.
// 이는 C++의 모든 것이 객체로 표현되기 때문이다.
​

// 변수
// 지역(스택)
// 전역, 정적, 외부(데이터)

// 메모리 영역
// 스택
// 데이터
// ROM
// 힙 영역(동적할당)

int main()
{
	// malloc: memory allocation, 동적 메모리를 할당하는 데 사용되는 함수
	// 프로그램 실행 중 필요한 크기만큼의 메모리를 할당하고 그 시작 주소를 반환한다.
	int* pInt = (int*)malloc(100); // 힙 영역에 100바이트 공간을 할당해서 시작 주소를 포인터 변수에 넘겨준다.
	// 포인터 변수 pInt 는 메인함수 스택 영역에 존재한다.
	// 포인터 변수를 참조했을 때 힙 영역에서 100바이트 공간의 시작주소가 있다.
// malloc 함수의 반환 타입이 void 인 이유
// 힙 영역을 사용하는 이유는 프로그램 실행 도중에 메모리를 요청하기 위한 동적할당이 목적이기 때문이다.
// 프로그램 실행 도중에 할당해 놓은 메모리 공간을 가져다 쓰는거고, 상황마다 사용 용도가 다르기 떄문에 자료형 타입은
// 사용자가 특정 상황 용도에 맞게 알맞은 포인터 타입으로 가리켜서 정한다.
// 그렇기에 할당해 놓은 메모리 공간의 자료형 타입은 정해놓지 않고 void 형이다.
// 따라서 malloc 함수는 요청한 메모리 만큼 힙 영역에 할당하고, 사용자가 필요할 때 메모리의 시작 주소를 넘겨준다.

	return 0;
}